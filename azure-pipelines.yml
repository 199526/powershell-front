pool:
  name: Azure Pipelines
  demands: msbuild

steps:
- task: MSBuild@1
  displayName: Build
  inputs:
    solution: build.proj
    msbuildArchitecture: x64
    configuration: Release
    msbuildArguments: '/t:Build /p:Framework=net452 /p:Configuration=Release'

- powershell: |
   &"C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.8 Tools\sn.exe"   -Vu "*,31bf3856ad364e35"
   &"C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.8 Tools\sn.exe"  -Vl
   &"C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.8 Tools\x64\sn.exe" -Vu "*,31bf3856ad364e35"
   &"C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.8 Tools\x64\sn.exe" -Vl
  displayName: 'Recover Strong Name Validation'

- powershell: |
   # Copy ShortCut to be Signed
   Copy-Item ./tools/AzureRM/AzureRM.psm1 -Destination src/Package/Release
  displayName: 'Before Signing'

- task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
  displayName: 'Dll Signing [Authenticode + Strong Name]'
  inputs:
    ConnectedServiceName: 'ESRP Signing Service'
    FolderPath: 'src\Package\Release'
    Pattern: |
     **/**/**/Microsoft*Azure*Commands*.dll
     **/**/**/Microsoft.Azure.Commands.Common.Authentication.dll
     **/**/**/Microsoft.Azure.Commands.Common..Authentication.ResourceManager.dll
     **/**/**/Microsoft.Azure.Management.*.*.dll
    UseMinimatch: true
    signConfigType: inlineSignParams
    inlineOperation: |
     [
       {
         "KeyCode": "CP-233863-SN",
         "OperationCode": "StrongNameSign",
         "Parameters": {},
         "ToolName": "sign",
         "ToolVersion": "1.0"
       },
       {
         "KeyCode": "CP-233863-SN",
         "OperationCode": "StrongNameVerify",
         "Parameters": {},
         "ToolName": "sign",
         "ToolVersion": "1.0"
       },
       {
         "KeyCode": "CP-230012",
         "OperationCode": "SigntoolSign",
         "Parameters": {
           "OpusName": "Microsoft",
           "OpusInfo": "http://www.microsoft.com",
           "FileDigest": "/fd \"SHA256\"",
           "PageHash": "/NPH",
           "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
         },
         "ToolName": "sign",
         "ToolVersion": "1.0"
       },
       {
         "KeyCode": "CP-230012",
         "OperationCode": "SigntoolVerify",
         "Parameters": {},
         "ToolName": "sign",
         "ToolVersion": "1.0"
       }
     ]

- task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
  displayName: 'Scripts Signing [Authenticode]'
  inputs:
    ConnectedServiceName: 'ESRP Signing Service'
    FolderPath: 'src\Package\Release'
    Pattern: |
     **/**/**/*.ps1
     **/**/**/*.psm1
     **/**/**/*.ps1xml
    UseMinimatch: true
    signConfigType: inlineSignParams
    inlineOperation: |
     [
       {
         "KeyCode": "CP-230012",
         "OperationCode": "SigntoolSign",
         "Parameters": {
           "OpusName": "Microsoft",
           "OpusInfo": "http://www.microsoft.com",
           "FileDigest": "/fd \"SHA256\"",
           "PageHash": "/NPH",
           "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
         },
         "ToolName": "sign",
         "ToolVersion": "1.0"
       },
       {
         "KeyCode": "CP-230012",
         "OperationCode": "SigntoolVerify",
         "Parameters": {},
         "ToolName": "sign",
         "ToolVersion": "1.0"
       }
     ]

- task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
  displayName: '3rd Party Signing [Authenticode]'
  inputs:
    ConnectedServiceName: 'ESRP Signing Service'
    FolderPath: 'src\Package\Release'
    Pattern: |
     **/**/**/*AutoMapper*.dll
     **/**/**/*TimeZoneConverter*.dll
     **/**/**/*YamlDotNet*.dll
     **/**/**/*Newtonsoft.Json*.dll
     **/**/**/*BouncyCastle.Crypto*.dll
    UseMinimatch: true
    signConfigType: inlineSignParams
    inlineOperation: |
     [
       {
         "KeyCode": "CP-231522",
         "OperationCode": "SigntoolSign",
         "Parameters": {
           "OpusName": "Microsoft",
           "OpusInfo": "http://www.microsoft.com",
           "FileDigest": "/fd \"SHA256\"",
           "PageHash": "/NPH",
           "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
         },
         "ToolName": "sign",
         "ToolVersion": "1.0"
       },
       {
         "KeyCode": "CP-231522",
         "OperationCode": "SigntoolVerify",
         "Parameters": {},
         "ToolName": "sign",
         "ToolVersion": "1.0"
       }
     ]

- powershell: |
   # Check Signature
   $Env:Path += ";C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.7.2 Tools"
   # Do not check psd1
   $Env:CheckPsd1 = "False"
   ./tools/CheckSignature.ps1 -CustomPath src/Package/Release
   # Copy files back after signing
   Copy-Item  src/Package/Release/AzureRM.psm1 -Destination ./tools/AzureRM
  displayName: 'After Signing'

- powershell: './tools/ExpandModules -Artifacts src/Package'
  displayName: 'Expand modules'

- task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
  displayName: 'Psd1 Signing [Authenticode]'
  inputs:
    ConnectedServiceName: 'ESRP Signing Service'
    FolderPath: src/Package
    Pattern: 'tmp/**/*.psd1'
    UseMinimatch: true
    signConfigType: inlineSignParams
    inlineOperation: |
     [
       {
         "KeyCode": "CP-230012",
         "OperationCode": "SigntoolSign",
         "Parameters": {
           "OpusName": "Microsoft",
           "OpusInfo": "http://www.microsoft.com",
           "FileDigest": "/fd \"SHA256\"",
           "PageHash": "/NPH",
           "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
         },
         "ToolName": "sign",
         "ToolVersion": "1.0"
       },
       {
         "KeyCode": "CP-230012",
         "OperationCode": "SigntoolVerify",
         "Parameters": {},
         "ToolName": "sign",
         "ToolVersion": "1.0"
       }
     ]

- task: PublishPipelineArtifact@1
  displayName: 'Publish Pipeline Artifact'
  inputs:
    targetPath: src
    artifact: src
  condition: succeededOrFailed()

- powershell: |
   $Env:Path += ";$Env:WIX"+"bin"
   Register-PSRepository -Name MSIcreationrepository -SourceLocation src/Package -InstallationPolicy Trusted
   ./setup/generate.ps1 -repository MSIcreationrepository
   Unregister-PSRepository -Name MSIcreationrepository
  displayName: 'Build Installer'

- task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
  displayName: 'Installer Signing [Authenticode]'
  inputs:
    ConnectedServiceName: 'ESRP Signing Service'
    FolderPath: setup
    Pattern: '**/*.msi'
    UseMinimatch: true
    signConfigType: inlineSignParams
    inlineOperation: |
     [
       {
         "KeyCode": "CP-230012",
         "OperationCode": "SigntoolSign",
         "Parameters": {
           "OpusName": "Microsoft",
           "OpusInfo": "http://www.microsoft.com",
           "FileDigest": "/fd \"SHA256\"",
           "PageHash": "/NPH",
           "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
         },
         "ToolName": "sign",
         "ToolVersion": "1.0"
       },
       {
         "KeyCode": "CP-230012",
         "OperationCode": "SigntoolVerify",
         "Parameters": {},
         "ToolName": "sign",
         "ToolVersion": "1.0"
       }
     ]

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: installer'
  inputs:
    PathtoPublish: setup
    ArtifactName: setup
