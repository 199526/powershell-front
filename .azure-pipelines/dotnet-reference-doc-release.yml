jobs:
- job: Generate XML for Dotnet Reference
  timeoutInMinutes: 180
  pool:
    vmImage: 'windows-2019'
  steps:
  - pwsh: 'Install-Module platyPS -Force -Confirm:$false -Scope CurrentUser'
    displayName: 'Install platyPS'
- pwsh: 'Install-Module PowerShellGet -Force -Confirm:$false -Scope CurrentUser -SkipPublisherCheck'
  displayName: 'Install PowerShellGet [v2.1.3 has a Publish-Module bug]'
- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: custom
    custom: msbuild
    arguments: 'build.proj /t:Build;CopyAboutTopics;GenerateHelp /p:Configuration=Release /p:GenerateDocumentationFile=true'
- task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
  displayName: 'Manifest Generator '
  inputs:
    BuildDropPath: artifacts
    PackageName: 'Azure PowerShell'
    PackageVersion: 7.2
- pwsh: |
   # Delete PowerShell Runtime Files
   Get-ChildItem -Path $Env:RepoArtifacts/$Env:Configuration -Recurse -Include 'runtimes' | Remove-Item -Recurse -Force
   
   # Copy ShortCut to be Signed
   Copy-Item .\tools\Az\Az.psm1 -Destination $Env:RepoArtifacts/$Env:Configuration
   Copy-Item .\tools\AzPreview\AzPreview.psm1 -Destination $Env:RepoArtifacts/$Env:Configuration
   Copy-Item .\tools\Installer\InstallModule.ps1 -Destination $Env:RepoArtifacts/$Env:Configuration
  displayName: 'Before Signing'steps:
- task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
  displayName: 'Dll Signing [Authenticode + Strong Name]'
  inputs:
    ConnectedServiceName: 'ESRP Signing Service'
    FolderPath: artifacts
    Pattern: |
     Release/**/Microsoft*Azure*PowerShell*Cmdlets*.dll
     Release/**/Az.*.private.dll
     Release/**/Microsoft.Azure.PowerShell.Authentication.dll
     Release/**/Microsoft.Azure.PowerShell.Authentication.ResourceManager.dll
     Release/**/Microsoft.Azure.PowerShell.Authenticators.dll
     Release/**/Microsoft.Azure.PowerShell.AuthenticationAssemblyLoadContext.dll
     Release/**/Microsoft.Azure.Commands.*.AlcWrapper.dll
     !Release/**/Microsoft*Azure*PowerShell*Cmdlets*.Test.dll
    UseMinimatch: true
    signConfigType: inlineSignParams
    inlineOperation: |
     [
       {
         "KeyCode": "CP-233863-SN",
         "OperationCode": "StrongNameSign",
         "Parameters": {},
         "ToolName": "sign",
         "ToolVersion": "1.0"
       },
       {
         "KeyCode": "CP-233863-SN",
         "OperationCode": "StrongNameVerify",
         "Parameters": {},
         "ToolName": "sign",
         "ToolVersion": "1.0"
       },
       {
         "KeyCode": "CP-230012",
         "OperationCode": "SigntoolSign",
         "Parameters": {
           "OpusName": "Microsoft",
           "OpusInfo": "http://www.microsoft.com",
           "FileDigest": "/fd \"SHA256\"",
           "PageHash": "/NPH",
           "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
         },
         "ToolName": "sign",
         "ToolVersion": "1.0"
       },
       {
         "KeyCode": "CP-230012",
         "OperationCode": "SigntoolVerify",
         "Parameters": {},
         "ToolName": "sign",
         "ToolVersion": "1.0"
       }
     ]
- task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
  displayName: 'Scripts Signing [Authenticode]'
  inputs:
    ConnectedServiceName: 'ESRP Signing Service'
    FolderPath: artifacts
    Pattern: |
     Release/**/*.ps1
     Release/**/*.psm1
     Release/**/*.ps1xml
     Release/**/*.js
    UseMinimatch: true
    signConfigType: inlineSignParams
    inlineOperation: |
     [
       {
         "KeyCode": "CP-230012",
         "OperationCode": "SigntoolSign",
         "Parameters": {
           "OpusName": "Microsoft",
           "OpusInfo": "http://www.microsoft.com",
           "FileDigest": "/fd \"SHA256\"",
           "PageHash": "/NPH",
           "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
         },
         "ToolName": "sign",
         "ToolVersion": "1.0"
       },
       {
         "KeyCode": "CP-230012",
         "OperationCode": "SigntoolVerify",
         "Parameters": {},
         "ToolName": "sign",
         "ToolVersion": "1.0"
       }
     ]
- task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
  displayName: '3rd Party Signing [Authenticode]'
  inputs:
    ConnectedServiceName: 'ESRP Signing Service'
    FolderPath: artifacts
    Pattern: |
     Release/**/*AutoMapper*.dll
     Release/**/*TimeZoneConverter*.dll
     Release/**/*YamlDotNet*.dll
     Release/**/*Newtonsoft.Json*.dll
     Release/**/*BouncyCastle.Crypto*.dll
    UseMinimatch: true
    signConfigType: inlineSignParams
    inlineOperation: |
     [
       {
         "KeyCode": "CP-231522",
         "OperationCode": "SigntoolSign",
         "Parameters": {
           "OpusName": "Microsoft",
           "OpusInfo": "http://www.microsoft.com",
           "FileDigest": "/fd \"SHA256\"",
           "PageHash": "/NPH",
           "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
         },
         "ToolName": "sign",
         "ToolVersion": "1.0"
       },
       {
         "KeyCode": "CP-231522",
         "OperationCode": "SigntoolVerify",
         "Parameters": {},
         "ToolName": "sign",
         "ToolVersion": "1.0"
       }
     ]
- pwsh: |
   # Check Signature
   $Env:Path += ";C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.7.2 Tools"
   # Do not check psd1
   $Env:CheckPsd1 = "False"
   ./tools/CheckSignature.ps1 -CustomPath $Env:RepoArtifacts/$Env:Configuration
   
   # Copy files back after signing
   Copy-Item $Env:RepoArtifacts/$Env:Configuration/Az.psm1 -Destination ./tools/Az
   Copy-Item $Env:RepoArtifacts/$Env:Configuration/AzPreview.psm1 -Destination ./tools/AzPreview
  displayName: 'After Signing'
  env:
    CheckPsd1: True
- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:
    command: custom
    custom: msbuild
    arguments: 'build.proj /t:Publish /p:Configuration=Release;NuGetKey=$(NuGetKey)'steps:
- pwsh: './tools/ExpandModules -Artifacts artifacts'
  displayName: 'Expand modules'
  condition: and(succeeded(), ne(variables['SignPsd1'], 'false'))
- pwsh: './tools/PackModules.ps1 -Artifacts artifacts -NugetExe tools\NuGet.exe'
  displayName: 'Repackage modules'
  condition: and(succeeded(), ne(variables['SignPsd1'], 'false'))
- task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
  displayName: 'Psd1 Signing [Authenticode]'
  inputs:
    ConnectedServiceName: 'ESRP Signing Service'
    FolderPath: artifacts
    Pattern: 'tmp/**/*.psd1'
    UseMinimatch: true
    signConfigType: inlineSignParams
    inlineOperation: |
     [
       {
         "KeyCode": "CP-230012",
         "OperationCode": "SigntoolSign",
         "Parameters": {
           "OpusName": "Microsoft",
           "OpusInfo": "http://www.microsoft.com",
           "FileDigest": "/fd \"SHA256\"",
           "PageHash": "/NPH",
           "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
         },
         "ToolName": "sign",
         "ToolVersion": "1.0"
       },
       {
         "KeyCode": "CP-230012",
         "OperationCode": "SigntoolVerify",
         "Parameters": {},
         "ToolName": "sign",
         "ToolVersion": "1.0"
       }
     ]
  condition: and(succeeded(), ne(variables['SignPsd1'], 'false'))
- task: PublishPipelineArtifact@0
  displayName: 'Save artifacts'
  inputs:
    artifactName: artifacts
    targetPath: artifacts
  condition: succeededOrFailed()
